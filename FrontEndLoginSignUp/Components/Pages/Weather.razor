@page "/branch"
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@rendermode InteractiveServer
@using Blazored.SessionStorage
@inject ISessionStorageService SessionStorage

@using System.Text.Json
@using System.Security.Claims
@if (role=="Admin" )
{
        <AddBranch></AddBranch>
        <ShowBranch></ShowBranch>
}


@code {
    private string token;
    public string role;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                token = await SessionStorage.GetItemAsync<string>("authToken");
                var claims = RoleFetch.ParseClaimsFromJwt(token);
                var roleClaim = claims.FirstOrDefault(c => c.Type == ClaimTypes.Role);
                role = roleClaim.Value;
                StateHasChanged(); // Request a re-render to update the UI if needed
            }
            catch (Exception ex)
            {
                // Handle exceptions as needed
                Console.WriteLine($"Error retrieving token: {ex.Message}");
            }
        }
    }
    
}
